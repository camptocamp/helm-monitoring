groups:
  - name: geo_status_global_{{.Release.Namespace}}
    rules:
      - record: geo_federation:status_k8s
        labels:
          kind: disk_usage
          chart: {{.Chart.Name}}
          release: prod
          namespace: cluster
        expr: |
          max(
            (1-node_filesystem_avail_bytes{mountpoint="/"}/node_filesystem_size_bytes)*100 > bool {{.Values.namespaceGlobal.disk.warning}}
          )  * 1
          +
          max(
            (1-node_filesystem_avail_bytes{mountpoint="/"}/node_filesystem_size_bytes)*100 > bool {{.Values.namespaceGlobal.disk.error}}
          ) * 9


      - record: geo_federation:status_k8s
        labels:
          kind: ram_usage
          chart: {{.Chart.Name}}
          release: prod
          namespace: cluster
        expr: |
          max(
            max by (node, cluster) (
              label_replace(
                100 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100) > bool 80,
                "node", "$1", "instance", "(.*):.*"
              )
            )
            and
            max by (node, cluster) (
              label_replace(
                kube_pod_info,
                "node", "$1", "host_ip", "(.*)"
              )
            )
          ) * 1
          +
          max(
            max by (node, cluster) (
              label_replace(
                100 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100) > bool 90,
                "node", "$1", "instance", "(.*):.*"
              )
            )
            and
            max by (node, cluster) (
              label_replace(
                kube_pod_info,
                "node", "$1", "host_ip", "(.*)"
              )
            )
          ) * 9


      - record: geo_federation:status_k8s
        labels:
          kind: cpu_load
          chart: {{.Chart.Name}}
          release: prod
          namespace: cluster
        expr: |
          (
            max (
              max by (host) (
                label_replace(
                  node_load15,
                  "host", "$1", "instance", "(.*):.*"
                )
              )
              /
              max by (host) (
                label_replace(
                  node:node_num_cpu:sum,
                  "host", "$1.$2.$3.$4", "node", "ip-(\\d+)-(\\d+)-(\\d+)-(\\d+)\\..*"
                )
              )
            ) > bool 1.5
          ) * 1
          +
          (
            max (
              max by (host) (
                label_replace(
                  node_load15,
                  "host", "$1", "instance", "(.*):.*"
                )
              )
              /
              max by (host) (
                label_replace(
                  node:node_num_cpu:sum,
                  "host", "$1.$2.$3.$4", "node", "ip-(\\d+)-(\\d+)-(\\d+)-(\\d+)\\..*"
                )
              )
            ) > bool 3
          ) * 9

      - record: geo_federation:status_k8s
        labels:
          kind: project_quota
          chart: {{.Chart.Name}}
          release: {{.Release.Name}}
        expr: |
          max by (namespace) (
            sum by (namespace, resource) (
              kube_resourcequota{type="used"}
            )
            /
            sum by (namespace, resource) (
              kube_resourcequota{type="hard"}
            ) * 100 > bool 90
          )
      - record: geo_federation:status_k8s
        labels:
          kind: project_cpu
          chart: {{.Chart.Name}}
          release: {{.Release.Name}}
        expr: |
          sum by (namespace) (
            max by (namespace, container_name, pod_name) (
              rate(
                container_cpu_usage_seconds_total{container_name=~".+"}[{{ .Values.namespaceGlobal.project.resolution }}]
              )
            )
          ) > bool min by (namespace) (kube_resourcequota{resource="requests.cpu", type="hard"})
          and
          sum by (namespace) (
            kube_resourcequota{resource="requests.cpu", type="hard"}
          )

      - record: geo_federation:status_k8s
        labels:
          kind: project_ram
          chart: {{.Chart.Name}}
          release: {{.Release.Name}}
        expr: |
          (
            sum by (namespace) (
              max by (namespace, container_name, pod_name) (
                min_over_time(
                  container_memory_rss{container_name=~".+"}[{{ .Values.namespaceGlobal.project.resolution }}]
                )
              )
            )
            > bool
            (
              sum by (namespace) (
                kube_resourcequota{type="hard", resource="limits.memory"}
              )
              /
              2  # the limits.memory quota is put at the double of what is sold to the customer
            )
          ) * 10

      - record: geo_federation:status_k8s
        labels:
          kind: redis_master
          chart: redis
          release: redis
        expr: |
          (
            min by (namespace) (
              redis_sentinel_masters
            ) < bool 1
          ) * 10
          or
          (
            min by (namespace) (
              redis_sentinel_master_slaves
            ) < bool 1
          ) * 1
          or
          min by (namespace) (
            redis_sentinel_masters
          ) * 0

      - record: geo_federation:status_k8s
        labels:
          kind: redis_sentinel
          chart: redis
          release: redis
        expr: |
          (
            min by (namespace) (
              redis_sentinel_master_sentinels
            ) < bool 3
          ) * 10
          or
          min by (namespace) (
            redis_sentinel_master_sentinels
          ) * 0
